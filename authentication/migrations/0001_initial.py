# Generated by Django 5.1.2 on 2024-10-10 09:16

import django.db.models.deletion
import utils.util_functions
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.CharField(db_index=True, default=utils.util_functions.generate_uuid, max_length=300, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('address', models.CharField(max_length=500)),
                ('phone_number', models.CharField(max_length=11)),
                ('has_paid', models.BooleanField(default=False)),
                ('date_of_payment', models.DateField(blank=True, null=True)),
                ('commencement_date', models.DateField()),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=14)),
                ('number_of_presentation', models.PositiveIntegerField(default=0)),
                ('payment_status', models.CharField(choices=[('FULL', 'FULL'), ('PART', 'PART'), ('NOT PAID', 'NOT PAID')], max_length=20)),
                ('type', models.CharField(choices=[('INTERN', 'INTERN'), ('EXTERN', 'EXTERN')], max_length=300)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentPresentation',
            fields=[
                ('id', models.CharField(db_index=True, default=utils.util_functions.generate_uuid, max_length=300, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('previous_presentation_date', models.DateField()),
                ('next_presentation_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.CharField(db_index=True, default=utils.util_functions.generate_uuid, max_length=300, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=300, null=True)),
                ('last_name', models.CharField(max_length=300, null=True)),
                ('is_instructor', models.BooleanField(default=False)),
                ('is_student', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.CharField(db_index=True, default=utils.util_functions.generate_uuid, max_length=300, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='instructor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
